version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "market_data.raw:12:1,orders.validated:12:1,trading.decisions:12:1,compliance.alerts:12:1,trades.executed:12:1"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus-config:/etc/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-config:/etc/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin

  execution-engine:
    build:
      context: .
      dockerfile: services/execution-engine/Dockerfile
    container_name: execution-engine
    environment:
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - kafka

  risk-manager:
    build:
      context: .
      dockerfile: services/risk-manager/Dockerfile
    container_name: risk-manager
    environment:
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - kafka

  market-data-handler:
    build:
      context: .
      dockerfile: services/market-data-handler/Dockerfile
    container_name: market-data-handler
    environment:
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - kafka

  order-matching-engine:
    build:
      context: .
      dockerfile: services/order-matching-engine/Dockerfile
    container_name: order-matching-engine
    environment:
      - KAFKA_BROKERS=kafka:9092
      - DATABASE_URL=postgresql://matcher:matchpass@postgres:5432/orderdb
    depends_on:
      - kafka
      - postgres

  compliance-gateway:
    build:
      context: .
      dockerfile: services/compliance-gateway/Dockerfile
    container_name: compliance-gateway
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKERS=kafka:9092
      - DATABASE_URL=postgresql://compliance:compliancepass@postgres-compliance:5432/compliancedb
    depends_on:
      - kafka
      - postgres-compliance

  llm-agents:
    build:
      context: .
      dockerfile: services/llm-agents/Dockerfile
    container_name: llm-agents
    ports:
      - "8000:8000"
    environment:
      - KAFKA_BROKERS=kafka:9092
      - REDIS_HOST=redis
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
    depends_on:
      - kafka
      - redis

  # Databases
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: matcher
      POSTGRES_PASSWORD: matchpass
    volumes:
      - postgres-data:/var/lib/postgresql/data

  postgres-compliance:
    image: postgres:15-alpine
    container_name: postgres-compliance
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: compliancedb
      POSTGRES_USER: compliance
      POSTGRES_PASSWORD: compliancepass
    volumes:
      - postgres-compliance-data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

volumes:
  prometheus-data:
  grafana-data:
  postgres-data:
  postgres-compliance-data:
  redis-data:
